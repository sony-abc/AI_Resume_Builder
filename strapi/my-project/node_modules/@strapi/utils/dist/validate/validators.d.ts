/// <reference types="lodash" />
import type { Model, Data } from '../types';
interface Context {
    schema: Model;
    getModel: (model: string) => Model;
}
declare const throwPasswords: (ctx: Context) => (entity: Data) => Promise<Data>;
declare const defaultValidateFilters: import("lodash").CurriedFunction2<Context, unknown, Promise<unknown>>;
declare const defaultValidateSort: import("lodash").CurriedFunction2<Context, unknown, Promise<unknown>>;
declare const defaultValidateFields: import("lodash").CurriedFunction2<Context, unknown, Promise<unknown>>;
declare const defaultValidatePopulate: import("lodash").CurriedFunction2<Context, unknown, Promise<unknown>>;
export { throwPasswords, defaultValidateFilters, defaultValidateSort, defaultValidateFields, defaultValidatePopulate, };
//# sourceMappingURL=validators.d.ts.map