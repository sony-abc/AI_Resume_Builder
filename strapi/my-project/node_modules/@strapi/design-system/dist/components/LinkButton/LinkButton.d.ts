import * as React from 'react';
import { BaseLinkProps } from '../BaseLink';
import { ButtonSize, ButtonVariant } from '../Button/constants';
type LinkButtonProps<C extends React.ElementType = 'a'> = BaseLinkProps<C> & {
    disabled?: boolean;
    endIcon?: React.ReactNode;
    size?: ButtonSize;
    startIcon?: React.ReactNode;
    variant?: ButtonVariant;
};
declare const LinkButton: <C extends React.ElementType<any, keyof React.JSX.IntrinsicElements> = "a">(props: React.PropsWithoutRef<LinkButtonProps<C>> & React.RefAttributes<unknown>) => React.ReactNode;
type LinkButtonComponent<C extends React.ElementType = 'a'> = (props: LinkButtonProps<C>) => React.ReactNode;
export { LinkButton };
export type { LinkButtonProps, LinkButtonComponent };
//# sourceMappingURL=LinkButton.d.ts.map