import * as React from 'react';
import * as Menu from './Menu';
interface SimpleMenuProps extends Omit<Menu.TriggerProps, 'children'>, Pick<Menu.ContentProps, 'popoverPlacement' | 'intersectionId'> {
    children?: React.ReactNode;
    label?: React.ReactNode;
    onOpen?: () => void;
    onClose?: () => void;
    /**
     * Callback function to be called when the popover reaches the end of the scrollable content
     */
    onReachEnd?: (entry: IntersectionObserverEntry) => void;
}
declare const SimpleMenu: ({ children, onOpen, onClose, popoverPlacement, onReachEnd, ...props }: SimpleMenuProps) => import("react/jsx-runtime").JSX.Element;
declare const MenuItem: ({ onSelect, disabled, isLink, ...props }: Menu.ItemProps<(props: Omit<import("..").BaseLinkProps<"a">, "ref"> & React.RefAttributes<HTMLAnchorElement>) => React.ReactNode>) => import("react/jsx-runtime").JSX.Element;
type MenuItemProps = Menu.ItemProps;
export { SimpleMenu, MenuItem, Menu };
export type { SimpleMenuProps, MenuItemProps };
//# sourceMappingURL=SimpleMenu.d.ts.map